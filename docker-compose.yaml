version: '3'
services:
    sonar:
        build: ./sonar
        depends_on:
            - api
            - ui
            - proxy
    api:
        build: ./api
        volumes:
            - ./api:/api
            - ./skiff_files/apps/paper-video-nav:/skiff_files/apps/paper-video-nav
        environment:
            # This ensures that errors are printed as they occur, which
            # makes debugging easier.
            - PYTHONUNBUFFERED=1
            - LOG_LEVEL=DEBUG
            - FLASK_ENV=development
            - POSTGRES_URL=postgres://foo:bar@db/paper-video-nav?sslmode=disable
    ui:
        build: ./ui
        # We can't mount the entire UI directory, since JavaScript dependencies
        # (`node_modules`) live at that location.
        volumes:
            - ./ui/demo/components:/ui/components
            - ./ui/demo/less:/ui/less
            - ./ui/demo/data:/ui/data
            - ./ui/demo/utils:/ui/utils
            - ./ui/demo/public:/ui/public
        environment:
            - NODE_ENV=development
    proxy:
        build: ./proxy
        ports:
            - 8080:8080
        depends_on:
            - ui
            - api
    it:
        build: ./it
        # This tells Docker to run our entrypoint in a way that ensures
        # signals are handled properly and that zombie processes are killed.
        # The main outcome being that it makes it faster to shut down the
        # stack.
        init: true
        # We override the default command so that the integration tests don't
        # run on startup, and so that the container stays alive. This makes
        # it faster when a developer wants to run the integration tests.
        entrypoint:
            - tail
        command:
            - -f
            - /dev/null
        volumes:
            - ./it/src:/it/src
            - ./it/package.json:/it/package.json
            - ./it/yarn.lock:/it/yarn.lock
            - ./it/tsconfig.json:/it/tsconfig.json
        depends_on:
            - proxy
            - ui
            - api
    db:
        image: postgres:14
        restart: always
        ports: ['5432:5432']
        environment:
            POSTGRES_USER: foo
            POSTGRES_PASSWORD: bar
            POSTGRES_DB: paper-video-nav
        volumes:
            - pgdata:/var/lib/postgresql/data

volumes:
    pgdata: