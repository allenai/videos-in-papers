# This file tells Google Cloud Build how to deploy the application.
# It can be attached to a variety of triggers, the default being whenever
# someone merges changes to the `main` branch.
steps:
- id: 'api.build'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-api:latest',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-api:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-api:latest',
    '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
    '.',
  ]
  dir: 'api'
  waitFor: [ '-' ]
- id: 'ui.build'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-ui:latest',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-ui:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-ui:latest',
    '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
    '.'
  ]
  dir: 'ui'
  waitFor: [ '-' ]
- id: 'proxy.build.ui'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-f', 'prod.Dockerfile',
    '--target', 'ui',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy-ui:latest',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy-ui:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy-ui:latest',
    '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
    '--build-arg', 'UI_IMAGE=gcr.io/$PROJECT_ID/$REPO_NAME-ui:$COMMIT_SHA',
    '.',
  ]
  waitFor: [ 'ui.build' ]
  dir: 'proxy'
- id: 'proxy.build.server'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-f', 'prod.Dockerfile',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:latest',
    '-t', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:$COMMIT_SHA',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:latest',
    '--cache-from', 'gcr.io/$PROJECT_ID/$REPO_NAME-ui:$COMMIT_SHA',
    '--build-arg', 'BUILDKIT_INLINE_CACHE=1',
    '--build-arg', 'UI_IMAGE=gcr.io/$PROJECT_ID/$REPO_NAME-ui:$COMMIT_SHA',
    '.',
  ]
  waitFor: [ 'proxy.build.ui' ]
  dir: 'proxy'
- id: 'api.push'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'gcr.io/$PROJECT_ID/$REPO_NAME-api:$COMMIT_SHA',
  ]
  waitFor: [ 'api.build' ]
- id: 'proxy.push'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:$COMMIT_SHA'
  ]
  waitFor: [ 'proxy.build.server' ]
# Generate our Kubernetes configuration
- id: 'config'
  name: 'gcr.io/ai2-reviz/jsonnet'
  args: [
    'eval',
    '-y',
    '--output-file', './webapp.yaml',
    '--tla-str', 'env=$_ENV',
    '--tla-str', 'apiImage=gcr.io/$PROJECT_ID/$REPO_NAME-api:$COMMIT_SHA',
    '--tla-str', 'proxyImage=gcr.io/$PROJECT_ID/$REPO_NAME-proxy:$COMMIT_SHA',
    '--tla-str', 'sha=$COMMIT_SHA',
    '--tla-str', 'cause=Automated Skiff Deploy SHA:$COMMIT_SHA BUILD:$BUILD_ID',
    '--tla-str', 'branch=$BRANCH_NAME',
    '--tla-str', 'repo=$REPO_NAME',
    '--tla-str', 'buildId=$BUILD_ID',
    './webapp.jsonnet'
  ]
  dir: '.skiff'
  waitFor: [ '-' ]
# Deploy the image to Kubernetes
- id: 'deploy'
  name: 'gcr.io/ai2-reviz/rudder'
  args: [
    'deploy',
    '-f',
    'webapp.yaml'
  ]
  dir: '.skiff'
  waitFor: [ 'api.push', 'proxy.push', 'config' ]
substitutions:
  _ENV: prod
images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME-api:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME-api:latest',
  'gcr.io/$PROJECT_ID/$REPO_NAME-ui:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME-ui:latest',
  'gcr.io/$PROJECT_ID/$REPO_NAME-proxy-ui:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME-proxy-ui:latest',
  'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:$COMMIT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME-proxy:latest'
]
artifacts:
  objects:
    location: 'gs://skiff-archive/$REPO_NAME/$_ENV/$BUILD_ID/$COMMIT_SHA'
    paths: ['.skiff/webapp.yaml']
options:
  env:
    - "DOCKER_BUILDKIT=1"
timeout: 20m
